@model AbarroteriaKary.ModelsPartial.CambioContrasenaViewModel
@{
    // Vista sin layout para controlar 100% el diseño
    Layout = null;

    bool fromRecovery = (ViewBag.FromRecovery as bool?) == true;
    string postAction = fromRecovery ? "CambiarContrasenaPorToken" : "CambiarContrasena";

    string pageTitle = fromRecovery ? "Crear nueva contraseña" : "Cambiar contraseña";
    string helpText = "La nueva contraseña debe tener al menos 8 caracteres, numeros, letras en mayuscula y minuscula, algun simbolo).";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Abarrotería Kary - @pageTitle</title>

    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Tu CSS -->
    <link rel="stylesheet" href="~/css/cambioContrasena.css" asp-append-version="true" />
</head>
<style>
    .validation-summary-valid {
        display: none;
    }
    /* oculto si no hay errores */
    .validation-summary-errors {
        display: block;
    }
    /* visible si hay errores */
</style>
<body class="cc-body">
    <div class="cc-band"></div>

    <div class="container cc-wrap d-flex align-items-center justify-content-center">
        <div class="cc-card shadow">
            <!-- Logo -->
            <div class="cc-avatar">
                <img src="~/img/LOGO.png" alt="logo" class="cc-avatar-img" />
            </div>

            <h2 class="cc-title text-center">@pageTitle</h2>
            <p class="cc-help">@helpText</p>

            <!-- Acción dinámica: sesión vs. recuperación por token -->
            <form asp-action="@postAction" asp-controller="Login" method="post" class="vstack gap-3" novalidate id="form-cambio">
                @Html.AntiForgeryToken()

                @* Si viene de recuperación, incluimos el token que envió el controlador *@
                @if (fromRecovery)
                {
                    <input type="hidden" name="token" value="@((string)ViewBag.RecoveryToken ?? "")" />
                }
                <!-- ✅ Resumen de validaciones (modelo + campos) -->
                <div asp-validation-summary="All" class="alert alert-danger mb-3" role="alert"></div>


                <!-- Resumen de validaciones -->
                <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                <!-- Nueva contraseña (simple, sin íconos) -->
                <div>
                    <label asp-for="NuevaContrasena" class="form-label fw-semibold">Contraseña nueva</label>
                    <input asp-for="NuevaContrasena" class="form-control cc-input" placeholder="Contraseña nueva" />
                    <span asp-validation-for="NuevaContrasena" class="text-danger small"></span>
                </div>

                <!-- Confirmar contraseña (simple, sin íconos) -->
                <div>
                    <label asp-for="ConfirmarContrasena" class="form-label fw-semibold">Confirme su contraseña</label>
                    <input asp-for="ConfirmarContrasena" class="form-control cc-input" placeholder="Repita la contraseña" />
                    <span asp-validation-for="ConfirmarContrasena" class="text-danger small"></span>
                </div>

                <button type="submit" class="btn cc-btn w-100 mt-2" id="btn-submit">
                    Guardar
                </button>
            </form>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation-unobtrusive@3.2.12/dist/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        (function () {
          'use strict';

          const form = document.getElementById('form-cambio');
          const btn  = document.getElementById('btn-submit');
          if (!form || !btn) return;

          // jQuery validate presente?
          const hasJqVal = (typeof $ !== 'undefined');

          // Rehabilita el botón cuando el form es inválido (evento de jquery.validate)
          if (hasJqVal) {
            const $form = $(form);

            // Cuando jQuery Validate construye el form, este event se dispara si hay errores
            $form.on('invalid-form.validate', function () {
              btn.disabled = false;
            });

            // Intercepta submit
            form.addEventListener('submit', function (e) {
              // Deja que jQuery Validate valide
              const ok = $form.valid();
              if (!ok) {
                btn.disabled = false;   // no lo congeles si hay errores
                return;                 // jQuery evita el submit por ti
              }
              btn.disabled = true;      // válido → evita doble clic
            });

          } else {
            // Fallback sin jQuery Validate: usa HTML5
            form.addEventListener('submit', function (e) {
              if (!form.checkValidity()) {
                e.preventDefault();
                e.stopPropagation();
                btn.disabled = false;
                form.classList.add('was-validated');
                return;
              }
              btn.disabled = true;
            });
          }
        })();
    </script>

</body>
</html>

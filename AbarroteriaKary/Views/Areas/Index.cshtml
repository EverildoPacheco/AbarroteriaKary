@model AbarroteriaKary.ModelsPartial.Paginacion.PaginadoViewModel<AbarroteriaKary.ModelsPartial.AreasViewModel>
@using System.Globalization

@{
    ViewData["Title"] = "Áreas";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string estado = (ViewBag.Estado as string) ?? "ACTIVO";
    string q = ViewBag.Q as string;
    string fDesde = ViewBag.FDesde as string;
    string fHasta = ViewBag.FHasta as string;

    string rangoTexto = "";
    if (DateTime.TryParse(fDesde, out var d1) && DateTime.TryParse(fHasta, out var d2))
        rangoTexto = $"{d1:dd/MM/yyyy} - {d2:dd/MM/yyyy}";
}

<!-- CARD / TOOLBAR -->
<div class="ak-toolbar mb-4 mt-4">
    <div class="ak-toolbar__row">
        <h1 class="ak-toolbar__title m-0">Áreas</h1>

        <div class="ak-toolbar__right">
            <!-- Agregar -->
            <a asp-action="Create"
               class="btn btn-ak-primary btn-ak-square d-inline-flex align-items-center gap-2">
                <i class="fa-solid fa-circle-plus"></i><span>Agregar</span>
            </a>

            <!-- Filtros de estado (★ preserva pageSize y reinicia a página 1) -->
            <a asp-action="Index" asp-route-estado="TODOS" asp-route-q="@q"
               asp-route-fDesde="@fDesde" asp-route-fHasta="@fHasta"
               asp-route-page="1" asp-route-pageSize="@Model.PageSize"
               class="btn btn-ak-filter btn-ak-square @(estado == "TODOS" ? "active" : "")">
                <i class="fa-solid fa-layer-group me-1"></i>Todos
            </a>

            <a asp-action="Index" asp-route-estado="ACTIVO" asp-route-q="@q"
               asp-route-fDesde="@fDesde" asp-route-fHasta="@fHasta"
               asp-route-page="1" asp-route-pageSize="@Model.PageSize"
               class="btn btn-ak-filter btn-ak-square @(estado == "ACTIVO" ? "active" : "")">
                <i class="fa-solid fa-check me-1"></i>Activo
            </a>

            <a asp-action="Index" asp-route-estado="INACTIVO" asp-route-q="@q"
               asp-route-fDesde="@fDesde" asp-route-fHasta="@fHasta"
               asp-route-page="1" asp-route-pageSize="@Model.PageSize"
               class="btn btn-ak-filter btn-ak-square @(estado == "INACTIVO" ? "active" : "")">
                <i class="fa-solid fa-ban me-1"></i>Inactivo
            </a>

            <!-- Buscador + Rango -->
            <form id="frmFiltros" method="get" asp-action="Index"
                  class="d-inline-flex align-items-center gap-2">
                <input type="hidden" name="estado" value="@estado" />
                <input type="hidden" name="page" value="1" />                 @* ★ Reinicia página *@
                <input type="hidden" name="pageSize" value="@Model.PageSize" />@* ★ Preserva pageSize *@

                <!-- RANGO -->
                <div class="input-group ak-daterange-group" style="width:clamp(220px, 20vw, 260px);">
                    <span class="input-group-text bg-white border-end-0" title="Rango de fechas">
                        <i class="fa-regular fa-calendar"></i>
                    </span>

                    <input id="rangoFechas"
                           class="form-control border-start-0 border-end-0"
                           placeholder="Buscar por fecha"
                           value="@rangoTexto"
                           autocomplete="off" />

                    <button type="button" id="btnClearRange"
                            class="input-group-text bg-white border-start-0"
                            title="Limpiar rango">
                        <i class="fa-solid fa-eraser"></i>
                    </button>
                </div>

                <input type="hidden" name="fDesde" id="fDesde" value="@fDesde" />
                <input type="hidden" name="fHasta" id="fHasta" value="@fHasta" />

                <!-- BUSCADOR -->
                <div class="input-group ak-search" style="width:clamp(220px, 24vw, 260px);">
                    <button type="submit" class="input-group-text bg-white border-end-0" title="Buscar">
                        <i class="fas fa-search"></i>
                    </button>
                    <input name="q" value="@q" class="form-control border-start-0" placeholder="Buscar por ID o nombre" />
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Paginador arriba (opcional) -->


<!-- Tabla -->
<div class="table-responsive">
    <table class="table table-bordered table-striped table-hover align-middle table-kary-zebra">
        <thead class="text-center thead-kary">
            <tr>
                @* ★ Encabezados seguros cuando no hay Items *@
                @if (Model.Items.Any())
                {
                    <th>@Html.DisplayNameFor(m => m.Items[0].areaId)</th>
                    <th>@Html.DisplayNameFor(m => m.Items[0].areaNombre)</th>
                    <th>@Html.DisplayNameFor(m => m.Items[0].FechaCreacion)</th>
                    <th>@Html.DisplayNameFor(m => m.Items[0].estadoArea)</th>
                }
                else
                {
                    <th>Código</th>
                    <th>Área</th>
                    <th>Fecha de creación</th>
                    <th>Estado</th>
                }
                <th>ACCIONES</th>
            </tr>
        </thead>

        <tbody>
            @if (!Model.Items.Any())
            {
                <tr>
                    <td colspan="5" class="text-center py-4 text-muted">
                        <i class="fa-regular fa-face-frown me-1"></i> No hay resultados.
                    </td>
                </tr>
            }
            else
            {
                foreach (var area in Model.Items)
                {
                    bool esActivo = string.Equals(area.estadoArea, "ACTIVO", StringComparison.OrdinalIgnoreCase);
                    <tr>
                        <td class="text-monospace">@Html.DisplayFor(_ => area.areaId)</td>
                        <td>@Html.DisplayFor(_ => area.areaNombre)</td>
                        <td>@area.FechaCreacion.ToString("dd/MM/yyyy")</td>
                        <td class="text-center">
                            <span class="badge text-white @(esActivo ? "bg-success" : "bg-danger")">
                                @(esActivo ? "Activo" : "Inactivo")
                            </span>
                        </td>
                        <td class="text-center acciones">
                            <a href="@Url.Action("Edit", "Areas", new { id = area.areaId })" class="btn btn-sm me-2" title="Editar">
                                <img src="~/img/Botones/lapiz.png" alt="Editar" class="icono-accion">
                            </a>
                            <a href="@Url.Action("Details", "Areas", new { id = area.areaId })" class="btn btn-sm me-2" title="Ver">
                                <img src="~/img/Botones/vision1.png" alt="Ver" class="icono-accion">
                            </a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <!-- Paginador abajo (recomendado) -->
    @await Html.PartialAsync("_Pager", Model)
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/litepicker/dist/css/litepicker.css" />
    <link rel="stylesheet" href="~/css/areas.css" asp-append-version="true" />
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/litepicker/dist/litepicker.js"></script>
    <script>
        (function () {
            'use strict';
            const form    = document.getElementById('frmFiltros');
            const input   = document.getElementById('rangoFechas');
            const fDesde  = document.getElementById('fDesde');
            const fHasta  = document.getElementById('fHasta');
            const btnClr  = document.getElementById('btnClearRange');
            const estadoH = form.querySelector('input[name="estado"]');

            const picker = new Litepicker({
                element: input,
                singleMode: false,
                autoApply: true,
                allowRepick: true,
                numberOfMonths: 2,
                numberOfColumns: 2,
                format: 'DD/MM/YYYY',
                lang: 'es-ES',
            });

            picker.on('selected', (start, end) => {
                if (start && end) {
                    fDesde.value = start.format('YYYY-MM-DD');
                    fHasta.value = end.format('YYYY-MM-DD');
                    form.submit();
                }
            });

            btnClr.addEventListener('click', () => {
                input.value = '';
                fDesde.value = '';
                fHasta.value = '';
                try { if (picker.clearSelection) picker.clearSelection(); } catch {}
                if (estadoH) estadoH.value = 'ACTIVO';
                form.submit();
            });
        })();
    </script>
}

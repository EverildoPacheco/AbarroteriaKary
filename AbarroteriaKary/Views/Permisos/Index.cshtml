@model AbarroteriaKary.ModelsPartial.Paginacion.PaginadoViewModel<AbarroteriaKary.ModelsPartial.PermisoListVM>
@using System.Globalization

@{
    ViewData["Title"] = "Permisos por Rol";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string estado = (ViewBag.Estado as string) ?? "ACTIVO";
    string q = ViewBag.Q as string;
    string fDesde = ViewBag.FDesde as string;
    string fHasta = ViewBag.FHasta as string;

    string rangoTexto = "";
    if (DateTime.TryParse(fDesde, out var d1) && DateTime.TryParse(fHasta, out var d2))
        rangoTexto = $"{d1:dd/MM/yyyy} - {d2:dd/MM/yyyy}";
}

<!-- CARD / TOOLBAR -->
<div class="ak-toolbar mb-4 mt-4">
    <div class="ak-toolbar__row">
        <h1 class="ak-toolbar__title m-0">Permisos por Rol</h1>

        <div class="ak-toolbar__right">
            <!-- Agregar: abre la UI de asignación masiva -->
            <a asp-action="Create"
               class="btn btn-ak-primary btn-ak-square d-inline-flex align-items-center gap-2">
                <i class="fa-solid fa-circle-plus"></i><span>Asignar permisos</span>
            </a>



            <!-- Buscador + Rango -->
            <form id="frmFiltros" method="get" asp-action="Index"
                  class="d-inline-flex align-items-center gap-2">
                <input type="hidden" name="estado" value="@estado" />
                <input type="hidden" name="page" value="1" />
                <input type="hidden" name="pageSize" value="@Model.PageSize" />



                @{
                    var repVm = new AbarroteriaKary.ModelsPartial.ReporteDropdownVM
                    {
                        Controller = "Permisos",                 // ← este controlador
                        ExportAction = "Exportar",               // ← acción que creamos
                        Label = "Reporte",
                        SizeCss = "btn btn-ak-primary btn-ak-square",

                        // Aquí solo usamos búsqueda/rango (en este módulo no hay estado)
                        Estado = "TODOS",                        // el dropdown lo pide; no lo usaremos en el controlador
                        Q = ViewBag.Q as string,
                        FDesde = ViewBag.FDesde as string,       // "yyyy-MM-dd"
                        FHasta = ViewBag.FHasta as string
                    };
                }
                @await Html.PartialAsync("~/Views/Shared/Reportes/_ReporteDropdown.cshtml", repVm)










                <div class="input-group ak-daterange-group" style="width:clamp(220px, 20vw, 260px);">
                    <span class="input-group-text bg-white border-end-0" title="Rango de fechas">
                        <i class="fa-regular fa-calendar"></i>
                    </span>

                    <input id="rangoFechas"
                           class="form-control border-start-0 border-end-0"
                           placeholder="Buscar por fecha"
                           value="@rangoTexto"
                           autocomplete="off" />

                    <button type="button" id="btnClearRange"
                            class="input-group-text bg-white border-start-0"
                            title="Limpiar rango">
                        <i class="fa-solid fa-eraser"></i>
                    </button>
                </div>

                <input type="hidden" name="fDesde" id="fDesde" value="@fDesde" />
                <input type="hidden" name="fHasta" id="fHasta" value="@fHasta" />

                <div class="input-group ak-search" style="width:clamp(220px, 24vw, 260px);">
                    <button type="submit" class="input-group-text bg-white border-end-0" title="Buscar">
                        <i class="fas fa-search"></i>
                    </button>
                    <input name="q" value="@q" class="form-control border-start-0"
                           placeholder="Buscar por código o nombre de rol" />
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Tabla -->
<div class="table-responsive">
    <table class="table table-bordered table-striped table-hover align-middle table-kary-zebra">
        <thead class="text-center thead-kary">
            <tr>
                <th>Permiso ID</th>
                <th>Rol</th>
                <th>Fecha de creación</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @if (!Model.Items.Any())
            {
                <tr>
                    <td colspan="4" class="text-center py-4 text-muted">
                        <i class="fa-regular fa-face-frown me-1"></i> No hay resultados.
                    </td>
                </tr>
            }
            else
            {
                foreach (var r in Model.Items)
                {
                    <tr>
                        <td class="text-monospace">@r.PermisosId</td>
                        <td>@r.RolNombre</td>
                        <td>@(r.FechaCreacion?.ToString("dd/MM/yyyy", CultureInfo.GetCultureInfo("es-GT")))</td>
                        <td class="text-center acciones">
             
                            <!-- EDITAR: edición masiva por rol -->
                            <a href="@Url.Action("EditBulk", "Permisos", new { rolId = r.RolId })"
                               class="btn btn-sm me-2" title="Editar permisos del rol">
                                <img src="~/img/Botones/lapiz.png" alt="Editar" class="icono-accion">
                            </a>

                            <a href="@Url.Action("Details", "Permisos", new { rolId = r.RolId })"
                               class="btn btn-sm me-2" title="Ver permisos del rol">
                                <img src="~/img/Botones/vision1.png" alt="Ver" class="icono-accion">
                            </a>



                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    @await Html.PartialAsync("_Pager", Model)
</div>

@section Scripts {
    <script>
        (function () {
          'use strict';
          const form   = document.getElementById('frmFiltros');
          if (!form) return;

          const input  = document.getElementById('rangoFechas');
          const fDesde = document.getElementById('fDesde');
          const fHasta = document.getElementById('fHasta');
          const btnClr = document.getElementById('btnClearRange');
          const estadoH = form.querySelector('input[name="estado"]');

          if (input && input._litepicker && typeof input._litepicker.destroy === 'function') {
            input._litepicker.destroy();
          }

          const start = '@(ViewBag.FDesde as string ?? "")';
          const end   = '@(ViewBag.FHasta as string ?? "")';

          const picker = new Litepicker({
            element: input,
            singleMode: false,
            autoApply: true,
            allowRepick: true,
            numberOfMonths: 2,
            numberOfColumns: 2,
            splitView: true,
            format: 'DD/MM/YYYY',
            lang: 'es-ES',
            startDate: start || null,
            endDate: end   || null
          });

          picker.on('selected', (s, e) => {
            if (s && e) {
              fDesde.value = s.format('YYYY-MM-DD');
              fHasta.value = e.format('YYYY-MM-DD');
              form.submit();
            }
          });

          if (btnClr) {
            btnClr.addEventListener('click', () => {
              input.value = '';
              fDesde.value = '';
              fHasta.value = '';
              try { picker.clearSelection(); } catch {}
              if (estadoH) estadoH.value = 'ACTIVO';
              form.submit();
            });
          }

          picker.on('render', () => {
            document.querySelectorAll(
              '.litepicker .month-item-header .month-name, .litepicker .month-item-header .year-number'
            ).forEach(el => el.style.cursor = 'pointer');
          });
        })();
    </script>
}
